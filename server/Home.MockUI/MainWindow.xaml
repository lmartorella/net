<Window x:Class="Lucky.HomeMock.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cvts="clr-namespace:Lucky.HomeMock.Converters"
        Title="Mock UI" Height="350" Width="525">
    <Grid>
        <Grid.Resources>
            <cvts:ResetReasonToEnabledConverter x:Key="ResetReasonToEnabledConverter" />
            <cvts:IntToStringConverter x:Key="IntToString" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        
        <!-- Top Toolbar -->
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <CheckBox Margin="4" IsChecked="{Binding BindSlave}">Slave</CheckBox>
            <TextBlock Margin="4">Reset reason</TextBlock>
            <ComboBox Margin="4" ItemsSource="{Binding ResetReasons}" SelectedItem="{Binding ResetReason}"></ComboBox>
            <TextBlock Margin="4">Exc</TextBlock>
            <TextBox Margin="4" Text="{Binding ExcMsg}" MinWidth="150" IsEnabled="{Binding ResetReason, Converter={StaticResource ResetReasonToEnabledConverter}}"></TextBox>
        </StackPanel>
        
        <TabControl Grid.Row="1">
            <!-- Display and logs -->
            <TabItem Header="Display/Log">
                <Grid> 
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <CheckBox Margin="4" IsChecked="{Binding VerboseLog}">Verbose</CheckBox>
                        <Button Command="{Binding ClearLogCommand}">Clear</Button>
                    </StackPanel>
                    <TextBox  Grid.Row="1" x:Name="LogBox" Margin="4" IsReadOnly="True" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"/>
                    <TextBlock Grid.Row="2" Text="Display" Margin="4"/>
                    <TextBox  Grid.Row="3" MaxLines="2" MinLines="2" x:Name="DisplayBox" Margin="4" />
                </Grid>
            </TabItem>

            <!-- Switch array -->
            <TabItem Header="Digital">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock>Count:</TextBlock>
                        <TextBox Text="{Binding SwitchesCount, Mode=TwoWay, Converter={StaticResource IntToString}}"></TextBox>
                    </StackPanel>

                    <ListBox ItemsSource="{Binding Inputs}" Grid.Row="1">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}"/>
                                    <CheckBox IsChecked="{Binding Value, Mode=TwoWay}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <ListBox ItemsSource="{Binding Outputs}" Grid.Row="2">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}"/>
                                    <CheckBox IsChecked="{Binding Value, Mode=TwoWay}" IsEnabled="False"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>

            <!-- Generic commander sink -->
            <TabItem Header="Commands">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Row="0" Grid.Column="0" Margin="3" Text="{Binding Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return" Command="{Binding SendCommandCommand}" />
                        </TextBox.InputBindings>
                    </TextBox>
                    <Button Grid.Row="0" Grid.Column="1" Margin="3" Command="{Binding SendCommandCommand}">Send</Button>
                    <TextBox Grid.Row="1" Grid.ColumnSpan="2" IsReadOnly="False" AcceptsReturn="True" Margin="3" Text="{Binding CommandLog}"/>
                </Grid>
            </TabItem>

        </TabControl>
        
    </Grid>
</Window>
